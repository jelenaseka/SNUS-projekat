<?xml version="1.0" encoding="utf-8"?>
<xs:schema xmlns:tns="http://tempuri.org/" elementFormDefault="qualified" targetNamespace="http://tempuri.org/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:import schemaLocation="http://localhost:58140/DatabaseManagerService.svc?xsd=xsd2" namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays" />
  <xs:element name="IsDatabaseEmpty">
    <xs:complexType>
      <xs:sequence />
    </xs:complexType>
  </xs:element>
  <xs:element name="IsDatabaseEmptyResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="IsDatabaseEmptyResult" type="xs:boolean" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="ChangeOutputValue">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="tagName" nillable="true" type="xs:string" />
        <xs:element minOccurs="0" name="value" type="xs:double" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="ChangeOutputValueResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="ChangeOutputValueResult" type="xs:boolean" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="GetOutputValues">
    <xs:complexType>
      <xs:sequence />
    </xs:complexType>
  </xs:element>
  <xs:element name="GetOutputValuesResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element xmlns:q1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" minOccurs="0" name="GetOutputValuesResult" nillable="true" type="q1:ArrayOfKeyValueOfstringdouble" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="TurnScanOnOff">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="tagName" nillable="true" type="xs:string" />
        <xs:element minOccurs="0" name="scan" type="xs:boolean" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="TurnScanOnOffResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="TurnScanOnOffResult" type="xs:boolean" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="Registration">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="username" nillable="true" type="xs:string" />
        <xs:element minOccurs="0" name="password" nillable="true" type="xs:string" />
        <xs:element minOccurs="0" name="role" nillable="true" type="xs:string" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="RegistrationResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="RegistrationResult" type="xs:boolean" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="SignIn">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="username" nillable="true" type="xs:string" />
        <xs:element minOccurs="0" name="password" nillable="true" type="xs:string" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="SignInResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="SignInResult" nillable="true" type="xs:string" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="AddOutputTag">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="tagName" nillable="true" type="xs:string" />
        <xs:element minOccurs="0" name="desc" nillable="true" type="xs:string" />
        <xs:element minOccurs="0" name="address" nillable="true" type="xs:string" />
        <xs:element minOccurs="0" name="initVal" type="xs:double" />
        <xs:element minOccurs="0" name="lowLimit" type="xs:int" />
        <xs:element minOccurs="0" name="highLimit" type="xs:int" />
        <xs:element minOccurs="0" name="type" nillable="true" type="xs:string" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="AddOutputTagResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="AddOutputTagResult" type="xs:boolean" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="AddInputTag">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="tagName" nillable="true" type="xs:string" />
        <xs:element minOccurs="0" name="desc" nillable="true" type="xs:string" />
        <xs:element minOccurs="0" name="address" nillable="true" type="xs:string" />
        <xs:element minOccurs="0" name="driver" nillable="true" type="xs:string" />
        <xs:element minOccurs="0" name="scanTime" type="xs:int" />
        <xs:element minOccurs="0" name="onOffScan" type="xs:boolean" />
        <xs:element minOccurs="0" name="lowLimit" type="xs:int" />
        <xs:element minOccurs="0" name="highLimit" type="xs:int" />
        <xs:element minOccurs="0" name="type" nillable="true" type="xs:string" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="AddInputTagResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="AddInputTagResult" type="xs:boolean" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="RemoveInputTag">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="tagName" nillable="true" type="xs:string" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="RemoveInputTagResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="RemoveInputTagResult" type="xs:boolean" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="RemoveOutputTag">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="tagName" nillable="true" type="xs:string" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="RemoveOutputTagResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="RemoveOutputTagResult" type="xs:boolean" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>