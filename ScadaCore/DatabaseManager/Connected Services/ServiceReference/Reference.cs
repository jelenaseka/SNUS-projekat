//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DatabaseManager.ServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IDatabaseManagerService")]
    public interface IDatabaseManagerService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManagerService/IsDatabaseEmpty", ReplyAction="http://tempuri.org/IDatabaseManagerService/IsDatabaseEmptyResponse")]
        bool IsDatabaseEmpty();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManagerService/IsDatabaseEmpty", ReplyAction="http://tempuri.org/IDatabaseManagerService/IsDatabaseEmptyResponse")]
        System.Threading.Tasks.Task<bool> IsDatabaseEmptyAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManagerService/ChangeOutputValue", ReplyAction="http://tempuri.org/IDatabaseManagerService/ChangeOutputValueResponse")]
        bool ChangeOutputValue(string tagName, double value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManagerService/ChangeOutputValue", ReplyAction="http://tempuri.org/IDatabaseManagerService/ChangeOutputValueResponse")]
        System.Threading.Tasks.Task<bool> ChangeOutputValueAsync(string tagName, double value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManagerService/GetOutputValues", ReplyAction="http://tempuri.org/IDatabaseManagerService/GetOutputValuesResponse")]
        System.Collections.Generic.Dictionary<string, double> GetOutputValues();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManagerService/GetOutputValues", ReplyAction="http://tempuri.org/IDatabaseManagerService/GetOutputValuesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, double>> GetOutputValuesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManagerService/TurnScanOnOff", ReplyAction="http://tempuri.org/IDatabaseManagerService/TurnScanOnOffResponse")]
        bool TurnScanOnOff(string tagName, bool scan);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManagerService/TurnScanOnOff", ReplyAction="http://tempuri.org/IDatabaseManagerService/TurnScanOnOffResponse")]
        System.Threading.Tasks.Task<bool> TurnScanOnOffAsync(string tagName, bool scan);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManagerService/Registration", ReplyAction="http://tempuri.org/IDatabaseManagerService/RegistrationResponse")]
        bool Registration(string username, string password, string role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManagerService/Registration", ReplyAction="http://tempuri.org/IDatabaseManagerService/RegistrationResponse")]
        System.Threading.Tasks.Task<bool> RegistrationAsync(string username, string password, string role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManagerService/SignIn", ReplyAction="http://tempuri.org/IDatabaseManagerService/SignInResponse")]
        string SignIn(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManagerService/SignIn", ReplyAction="http://tempuri.org/IDatabaseManagerService/SignInResponse")]
        System.Threading.Tasks.Task<string> SignInAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManagerService/AddOutputTag", ReplyAction="http://tempuri.org/IDatabaseManagerService/AddOutputTagResponse")]
        bool AddOutputTag(string tagName, string desc, string address, double initVal, int lowLimit, int highLimit, string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManagerService/AddOutputTag", ReplyAction="http://tempuri.org/IDatabaseManagerService/AddOutputTagResponse")]
        System.Threading.Tasks.Task<bool> AddOutputTagAsync(string tagName, string desc, string address, double initVal, int lowLimit, int highLimit, string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManagerService/AddInputTag", ReplyAction="http://tempuri.org/IDatabaseManagerService/AddInputTagResponse")]
        bool AddInputTag(string tagName, string desc, string address, string driver, int scanTime, bool onOffScan, int lowLimit, int highLimit, string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManagerService/AddInputTag", ReplyAction="http://tempuri.org/IDatabaseManagerService/AddInputTagResponse")]
        System.Threading.Tasks.Task<bool> AddInputTagAsync(string tagName, string desc, string address, string driver, int scanTime, bool onOffScan, int lowLimit, int highLimit, string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManagerService/RemoveInputTag", ReplyAction="http://tempuri.org/IDatabaseManagerService/RemoveInputTagResponse")]
        bool RemoveInputTag(string tagName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManagerService/RemoveInputTag", ReplyAction="http://tempuri.org/IDatabaseManagerService/RemoveInputTagResponse")]
        System.Threading.Tasks.Task<bool> RemoveInputTagAsync(string tagName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManagerService/RemoveOutputTag", ReplyAction="http://tempuri.org/IDatabaseManagerService/RemoveOutputTagResponse")]
        bool RemoveOutputTag(string tagName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManagerService/RemoveOutputTag", ReplyAction="http://tempuri.org/IDatabaseManagerService/RemoveOutputTagResponse")]
        System.Threading.Tasks.Task<bool> RemoveOutputTagAsync(string tagName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDatabaseManagerServiceChannel : DatabaseManager.ServiceReference.IDatabaseManagerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DatabaseManagerServiceClient : System.ServiceModel.ClientBase<DatabaseManager.ServiceReference.IDatabaseManagerService>, DatabaseManager.ServiceReference.IDatabaseManagerService {
        
        public DatabaseManagerServiceClient() {
        }
        
        public DatabaseManagerServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DatabaseManagerServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DatabaseManagerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DatabaseManagerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool IsDatabaseEmpty() {
            return base.Channel.IsDatabaseEmpty();
        }
        
        public System.Threading.Tasks.Task<bool> IsDatabaseEmptyAsync() {
            return base.Channel.IsDatabaseEmptyAsync();
        }
        
        public bool ChangeOutputValue(string tagName, double value) {
            return base.Channel.ChangeOutputValue(tagName, value);
        }
        
        public System.Threading.Tasks.Task<bool> ChangeOutputValueAsync(string tagName, double value) {
            return base.Channel.ChangeOutputValueAsync(tagName, value);
        }
        
        public System.Collections.Generic.Dictionary<string, double> GetOutputValues() {
            return base.Channel.GetOutputValues();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, double>> GetOutputValuesAsync() {
            return base.Channel.GetOutputValuesAsync();
        }
        
        public bool TurnScanOnOff(string tagName, bool scan) {
            return base.Channel.TurnScanOnOff(tagName, scan);
        }
        
        public System.Threading.Tasks.Task<bool> TurnScanOnOffAsync(string tagName, bool scan) {
            return base.Channel.TurnScanOnOffAsync(tagName, scan);
        }
        
        public bool Registration(string username, string password, string role) {
            return base.Channel.Registration(username, password, role);
        }
        
        public System.Threading.Tasks.Task<bool> RegistrationAsync(string username, string password, string role) {
            return base.Channel.RegistrationAsync(username, password, role);
        }
        
        public string SignIn(string username, string password) {
            return base.Channel.SignIn(username, password);
        }
        
        public System.Threading.Tasks.Task<string> SignInAsync(string username, string password) {
            return base.Channel.SignInAsync(username, password);
        }
        
        public bool AddOutputTag(string tagName, string desc, string address, double initVal, int lowLimit, int highLimit, string type) {
            return base.Channel.AddOutputTag(tagName, desc, address, initVal, lowLimit, highLimit, type);
        }
        
        public System.Threading.Tasks.Task<bool> AddOutputTagAsync(string tagName, string desc, string address, double initVal, int lowLimit, int highLimit, string type) {
            return base.Channel.AddOutputTagAsync(tagName, desc, address, initVal, lowLimit, highLimit, type);
        }
        
        public bool AddInputTag(string tagName, string desc, string address, string driver, int scanTime, bool onOffScan, int lowLimit, int highLimit, string type) {
            return base.Channel.AddInputTag(tagName, desc, address, driver, scanTime, onOffScan, lowLimit, highLimit, type);
        }
        
        public System.Threading.Tasks.Task<bool> AddInputTagAsync(string tagName, string desc, string address, string driver, int scanTime, bool onOffScan, int lowLimit, int highLimit, string type) {
            return base.Channel.AddInputTagAsync(tagName, desc, address, driver, scanTime, onOffScan, lowLimit, highLimit, type);
        }
        
        public bool RemoveInputTag(string tagName) {
            return base.Channel.RemoveInputTag(tagName);
        }
        
        public System.Threading.Tasks.Task<bool> RemoveInputTagAsync(string tagName) {
            return base.Channel.RemoveInputTagAsync(tagName);
        }
        
        public bool RemoveOutputTag(string tagName) {
            return base.Channel.RemoveOutputTag(tagName);
        }
        
        public System.Threading.Tasks.Task<bool> RemoveOutputTagAsync(string tagName) {
            return base.Channel.RemoveOutputTagAsync(tagName);
        }
    }
}
